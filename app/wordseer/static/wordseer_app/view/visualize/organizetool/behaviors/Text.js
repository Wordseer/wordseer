/* Copyright 2012 Aditi Muralidharan. See the file "LICENSE" for the full license governing this code. */Ext.define('WordSeer.view.visualize.organizetool.behaviors.Text', {    alternateClassName: ['Text'],         statics: {                 /* makeEditable uses a foreign object/input field               to do the editing. Preferably, one would just click the text to edit it,               but SVG doesn't seem to offer anything handy.                              input value(boolean wrap) is true if you want the text to wrap, and false otherwise            */                        //this is based directly from this example: http://bl.ocks.org/2653660, but i changed the input type to be a textarea.            //I also included text wrapping.        makeEditable:function(object, wrap, n)        {               object              .on("click", function(d) {                  //only one input textarea at a time                d3.selectAll("*[use=\"foreign\"]").remove();                              var p = this.parentNode;//                console.log(p);                var el = d3.select(this);                var p_el = d3.select(p);                                // inject a foreign object                var xy = this.getBBox();                                var myid = this.id;                var mytext = this.textContent;                                var frm = p_el.append("foreignObject");                                var inp = frm                    .attr("x", xy.x + D3Helper.getTransformX(D3Helper.getElFromSel(el)))                    .attr("y", xy.y + D3Helper.getTransformY(D3Helper.getElFromSel(el)))                    .attr("width", 300)                    .attr("height", 300)                    .attr("id", myid)                    .attr("class", "foreground")                    .attr("use", "foreign")                    .attr("transform", "translate(0,0)")                      .append("xhtml:form")                            .append("textarea")                                .text(mytext)                                .style("height", "25px")                                .style("width", "150px")                                                       .on("keypress", function() {                                    if (!d3.event)                                        d3.event = window.event;                                    var e = d3.event;                                    if (e.keyCode === 13)                                    {                                          // IE                                        if (typeof(e.cancelBubble) !== 'undefined')                                          e.cancelBubble = true;                                                                                  if (e.stopPropagation)                                          e.stopPropagation();                                        e.preventDefault();                                                        var txt = inp.node().value;                                        if (txt !== "") {                                                                                    if(wrap) {                                                el.selectAll("tspan").remove();                                                Text.textWrap(txt, el, n)                                            }                                                                                        else {                                                el.text(txt);                                            }                                        }                                        d3.selectAll("*[use=\"foreign\"]").remove();                                                                                obj_el = D3Helper.getElFromSel(object);                                                                                                                          //to change invisible box size                                        if (obj_el.getAttribute("type") === "annotation") {                                                                                                                            d3.selectAll("rect[id=\"" + myid + "\"]")                                                .attr("width", function(d) {                                                    var bbox = obj_el.getBBox();                                                    return bbox.width + 16;                                                })                                                .attr("height", function(d) {                                                    var bbox = obj_el.getBBox();                                                    return bbox.height + 16;                                                });                                                                                }                                                                            }                                });                                                    });                            },  //end of makeEditable        textWrap:function(text, textEl, n) {            var entry = text;                            while (entry !== "") {                            var array = Text.getLine(entry, n)                var line = array[0];                entry = array[1];                            textEl.append("tspan")                    .text(line)                    .attr("x", 0)                    .attr("dy", 15)            }        },                getLine:function(text, n) {                    if(text.length <= n) {                return [text, ""];            }                      var count = n;                        while (text.charAt(count) !== " " && count > 0) {                count--;            }                        if( count === 0) {                count = n;                                while (text.charAt(count) !== "-" && count > 0) {                    count--;                }                                if( count === 0) {                    count = n;                               }                            }                        var line = text.substring(0, count);            var rest = text.substring(count);                                    if (rest.charAt(0) === " ") {                rest = rest.substring(1);            }                        var array = [line, rest];                        return array;        },                tspanCenter:function(textEl) {            var text = D3Helper.getElFromSel(textEl);                    var bbox = text.getBBox();                        var tspans = d3.selectAll("tspan").select(function(d) {                                      if(this.parentNode === text) {                    return this;                }                                else {                    return null;                }                            }).attr("x", function(d) {                    return this.getAttribute("x") + ( (bbox.width / 2) - (this.offsetWidth / 2 ) ) ;            });                                }            } //end of statics})